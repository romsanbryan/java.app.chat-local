
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.ImageIcon;

/**
 * En esta clase se conectara a nuestro servidor y sera utilizada por todos los
 * usuarios de nuestra sala de chat. Al ser un hilo para que varios "clientes"
 * puedan acceder de manera concurrente, implementamos de la Clase Runnable.
 * Aparte se incorpora una interfaz para que sea mas atractivo a la hora de
 * hablar en nuestra sala.
 *
 * @author romsabryan (Bryan Jesus Romero Santos)
 * @author rafaelge (Rafael Gonzalez Escobar)
 * @author javigon (Javier Gonzalez Guzman)
 *
 * @version 1.0
 */
public class Cliente extends javax.swing.JFrame implements Runnable {

    /**
     * Creamos el constructor y cargamos el icono de nuestra interfaz
     */
    public Cliente() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/icono.png")).getImage());

    }

    /**
     * Se encarga de rellenar nuestra ventana donde apareceran todos los
     * mensajes
     *
     * @param titulo Contiene una cadena con el mensaje nuevo que enviaremos a
     * todas las pantallas
     */
    private void contenidoChat(String titulo) {
        TablonMensajeria.setText(TablonMensajeria.getText() + "\n" + titulo);
    }

    /**
     * Accion para que al pulsar un mensaje este sea enviado y borrado el texto
     * en nuestro cuadro de mensajes
     */
    private void enviarMensaje() {
        String name = entradaTexto.getText();
        os.println(name);
        entradaTexto.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entradaTexto = new javax.swing.JTextField();
        BotonEnviar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablonMensajeria = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        BotonSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WhatGram");
        setMinimumSize(new java.awt.Dimension(866, 655));
        setPreferredSize(new java.awt.Dimension(866, 655));
        getContentPane().setLayout(null);

        entradaTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                entradaTextoKeyPressed(evt);
            }
        });
        getContentPane().add(entradaTexto);
        entradaTexto.setBounds(30, 550, 490, 40);

        BotonEnviar.setBackground(new java.awt.Color(0, 102, 102));
        BotonEnviar.setForeground(new java.awt.Color(255, 255, 255));
        BotonEnviar.setText("Enviar");
        BotonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonEnviar);
        BotonEnviar.setBounds(540, 550, 77, 40);

        TablonMensajeria.setEditable(false);
        TablonMensajeria.setColumns(20);
        TablonMensajeria.setRows(5);
        TablonMensajeria.setBorder(null);
        TablonMensajeria.setName(""); // NOI18N
        jScrollPane1.setViewportView(TablonMensajeria);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 108, 590, 410);

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Limpiar historial");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(660, 490, 160, 25);

        BotonSalir.setBackground(new java.awt.Color(0, 102, 102));
        BotonSalir.setForeground(new java.awt.Color(255, 255, 255));
        BotonSalir.setText("Salir");
        BotonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(BotonSalir);
        BotonSalir.setBounds(750, 20, 90, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icono.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 10, 50, 50);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/online.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(660, 110, 110, 30);

        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(660, 140, 160, 340);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 102, 102));
        jTextField2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("         WhatGram");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(-10, -10, 1080, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondo.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 10, 1060, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento del boton "Enviar"
     *
     * @param evt
     */
    private void BotonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEnviarActionPerformed
        // TODO add your handling code here:
        enviarMensaje();
    }//GEN-LAST:event_BotonEnviarActionPerformed

    /**
     * Evento del cuadro de mensajes para que al pulsar una tecla, se envie el
     * mensaje
     *
     * @param evt
     */
    private void entradaTextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entradaTextoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // Si pulsamos la tecla "ENTER"
            enviarMensaje();
        }
    }//GEN-LAST:event_entradaTextoKeyPressed

    /**
     * Accion del boton "Salir"
     *
     * @param evt
     */
    private void BotonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSalirActionPerformed
        os.println("/quit"); // Envia al servidor un mensaje de que se ha desconectado
        System.exit(0);
    }//GEN-LAST:event_BotonSalirActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.TablonMensajeria.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Metodo principal que permite que se ejecute nuestra clase. En este se
     * accede y conecta al servidor
     *
     * @param args
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */

 /*
            Iniciamos la conexion
         */
        try {
            clientSocket = new Socket(host, portNumber);
            inputLine = new BufferedReader(new InputStreamReader(System.in));
            os = new PrintStream(clientSocket.getOutputStream());
            is = new DataInputStream(clientSocket.getInputStream());
        } catch (UnknownHostException e) {
            System.err.println("No tengo conexión con el host: " + host);
        } catch (IOException e) {
            System.err.println("Error de comunicación con el host: " + host);
        }

        /*
           Si nos conectamos correctamente, creamos el hilo de escucha al servidor
         */
        if (clientSocket != null && os != null && is != null) {
            try {
                Cliente client = new Cliente();
                client.setVisible(true);
                new Thread(client).start();

                while (!closed) { // Si Close==true no hacemos nada, para que se peuda cerrar el envio, la recepcion y conexion
                }

                os.close();
                is.close();
                clientSocket.close();
            } catch (IOException e) {
                System.err.println("IOException:  " + e);
            }
        }
    }

    /**
     * Metodo "run" de nuestra clase
     *
     * @see Runnable
     */
    @Override
    public void run() {
        String msg;
        try {
            while ((msg = is.readLine()) != null) {  // "Chateamos" siempre que tengamos algo escrito en nuestro cuadro de mensajes       
                this.contenidoChat(msg);
                if (msg.contains("*** chao")) { // Si nuestro mensaje contiene "chao" cerramos el bucle y salimos de la sala
                    break;
                }
            }
            closed = true; // Cerramos nuestra interfaz
        } catch (IOException e) {
            System.err.println("IOException:  " + e);
        }
    }

    private static final int portNumber = 5555; // Puero al que nos conectaremos
    //private static final String host = "127.0.0.1"; //IP de nuestro servidor
    private static final String host = "localhost"; //IP de nuestro servidor
    private static Socket clientSocket = null; // Socket cliente
    private static PrintStream os = null; // Variable para enviar datos
    private static DataInputStream is = null; // Variables para recibir datos
    private static BufferedReader inputLine = null; // Variable para leer datos
    private static boolean closed = false; // Variable para cerrar el chat
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonEnviar;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JTextArea TablonMensajeria;
    private javax.swing.JTextField entradaTexto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
